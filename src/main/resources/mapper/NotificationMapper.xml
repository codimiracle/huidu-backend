<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codimiracle.application.platform.huidu.mapper.NotificationMapper">
    <resultMap id="BaseResultMap" type="com.codimiracle.application.platform.huidu.entity.po.Notification">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sender_id" jdbcType="INTEGER" property="senderId"/>
        <result column="receiver_id" jdbcType="INTEGER" property="receiverId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="message" jdbcType="VARCHAR" property="message"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="read" jdbcType="BIT" property="read"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="IntegratedResultMap" type="com.codimiracle.application.platform.huidu.entity.vo.NotificationVO">
        <id column="notification_id" jdbcType="INTEGER" property="id"/>
        <result column="notification_type" jdbcType="VARCHAR" property="type"/>
        <result column="notification_message" jdbcType="VARCHAR" property="message"/>
        <result column="notification_link" jdbcType="VARCHAR" property="link"/>
        <result column="notification_read" jdbcType="BIT" property="read"/>
        <result column="notification_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="notification_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association property="receiver"
                     javaType="com.codimiracle.application.platform.huidu.entity.vo.UserProtectedVO">
            <result column="receiver_id" property="id"/>
            <result column="receiver_username" property="username"/>
            <result column="receiver_nickname" property="nickname"/>
            <result column="receiver_avatar" property="avatar"/>
        </association>
        <association property="sender" javaType="com.codimiracle.application.platform.huidu.entity.vo.UserProtectedVO">
            <result column="sender_id" property="id"/>
            <result column="sender_username" property="username"/>
            <result column="sender_nickname" property="nickname"/>
            <result column="sender_avatar" property="avatar"/>
        </association>
    </resultMap>
    <sql id="select_statement">
        SELECT n.id notification_id,
        n.sender_id,
        s.username sender_username,
        s.nickname sender_nickname,
        s.avatar sender_avatar,
        n.receiver_id,
        r.username receiver_username,
        r.nickname receiver_nickname,
        r.avatar receiver_avatar,
        n.type notification_type,
        n.message notification_message,
        n.link notification_link,
        n.`read` notification_read,
        n.create_time notification_create_time,
        n.update_time notification_update_time
        FROM notification n
        LEFT JOIN user r ON n.receiver_id = r.id
        LEFT JOIN user s ON n.sender_id = s.id
        WHERE n.deleted = 0
    </sql>
    <update id="deleteByIdLogically">
        UPDATE notification n
        SET n.deleted = 1
        WHERE n.id = #{id}
    </update>
    <update id="markAsRead">
        UPDATE notification n
        SET n.`read` = 1
        WHERE n.id = #{id}
    </update>
    <select id="selectAllIntegrally" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        <if test="filter != null">
            <if test="filter.lastId != null and filter.lastId.length eq 2">
                AND n.id BETWEEN #{filter.lastId[0]} AND #{filter.lastId[1]}
            </if>
            <if test="filter.lastId != null and filter.lastId.length eq 1">
                AND n.id &lt; #{filter.lastId[0]}
            </if>
            <if test="filter.receiverId != null and filter.receiverId.length gt 0">
                AND n.receiver_id = #{filter.receiverId[0]}
            </if>
            <if test="filter.read != null and filter.read.length gt 0">
                AND n.`read` = #{filter.read[0]}
            </if>
        </if>
        <if test="sorter != null">
            <if test="sorter.field == 'id'">
                ORDER BY n.id
                <if test="sorter.order == 'descend'">DESC</if>
            </if>
        </if>
    </select>
    <select id="selectByIdIntegrally" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        AND n.id = #{id}
    </select>
</mapper>