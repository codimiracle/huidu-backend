<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codimiracle.application.platform.huidu.mapper.ContentArticleMapper">
    <resultMap id="BaseResultMap" type="com.codimiracle.application.platform.huidu.entity.po.ContentArticle">
        <!--
          WARNING - @mbg.generated
        -->
        <result column="content_id" jdbcType="INTEGER" property="contentId"/>
        <result column="target_content_id" jdbcType="INTEGER" property="targetContentId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="words" jdbcType="INTEGER" property="words"/>
        <result column="content_type" jdbcType="VARCHAR" property="contentType"/>
        <result column="content_source" jdbcType="VARCHAR" property="contentSource"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="reads" jdbcType="INTEGER" property="reads"/>
    </resultMap>
    <resultMap id="IntegratedResultMap"
               extends="com.codimiracle.application.platform.huidu.mapper.ContentMapper.IntegratedResultMap"
               type="com.codimiracle.application.platform.huidu.entity.vo.ArticleVO">
        <result column="content_article_target_content_id" jdbcType="VARCHAR" property="targetContentId"/>
        <result column="content_article_title" jdbcType="VARCHAR" property="title"/>
        <result column="content_article_words" jdbcType="INTEGER" property="words"/>
        <result column="content_article_status" jdbcType="VARCHAR" property="status"/>
        <result column="content_article_reads" jdbcType="INTEGER" property="reads"/>
        <association property="content"
                     javaType="com.codimiracle.application.platform.huidu.entity.embedded.ContentSource">
            <result column="content_article_content_type" jdbcType="VARCHAR" property="type"/>
            <result column="content_article_content_source" jdbcType="VARCHAR" property="source"/>
        </association>
    </resultMap>
    <sql id="select_statement">
        SELECT c.id content_id,
        c.type content_type,
        c.comments content_comments,
        c.rate content_rate,
        c.likes content_likes,
        c.reposts content_reposts,
        c.create_time content_create_time,
        c.update_time content_update_time,
        ca.target_content_id content_article_target_content_id,
        ca.title content_article_title,
        ca.words content_article_words,
        ca.content_type content_article_content_type,
        ca.content_source content_article_content_source,
        ca.status content_article_status,
        ca.`reads` content_article_reads,
        u.id user_id,
        u.username user_username,
        u.nickname user_nickname,
        u.avatar user_avatar
        FROM content c
        LEFT JOIN content_article ca ON c.id = ca.content_id
        LEFT JOIN user u ON c.owner_id = u.id
        WHERE c.deleted = 0
        <if test="type != null">
            AND c.type = #{type}
        </if>
    </sql>
    <select id="selectByIdIntegrally" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        AND c.id = #{id};
    </select>
    <select id="selectAllIntegrally" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        <if test="filter != null">
            <if test="filter.title != null and filter.title.length gt 0">
                AND ca.title LIKE CONCAT('%', #{filter.title[0]}, '%')
            </if>
            <if test="filter.targetContentId != null and filter.targetContentId.length gt 0">
                AND ca.target_content_id = #{filter.targetContentId[0]}
            </if>
            <if test="filter.content != null and filter.content.length gt 0">
                AND ca.content_source LIKE CONCAT('%', #{filter.content[0]}, '%')
            </if>
            <if test="filter.owner != null and filter.owner.length gt 0">
                AND (u.username LIKE CONCAT('%', #{filter.owner[0]}, '%') OR u.nickname LIKE
                CONCAT('%',#{filter.owner[0]}, '%'))
            </if>
            <if test="filter.type != null and filter.type.length gt 0">
                AND c.type IN
                <foreach item="item" index="index" collection="filter.type"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="filter.status != null and filter.status.length gt 0">
                AND ca.status IN
                <foreach item="item" index="index" collection="filter.status"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </if>
        <if test="sorter != null">
            <if test="sorter.field == 'create_time'">
                ORDER BY c.create_time
                <if test="sorter.order == 'descend'">DESC</if>
            </if>
            <if test="sorter.field == 'hot_degree'">
                ORDER BY (c.likes * 3 + c.reads + c.comments) + c.rate * 5
                <if test="sorter.order == 'descend'">DESC</if>
            </if>
        </if>
    </select>

    <select id="selectHotIntegrally" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        <if test="filter != null">
            <if test="filter.targetContentId != null and filter.targetContentId.length gt 0">
                AND ca.target_content_id = #{filter.targetContentId[0]}
            </if>
        </if>
        ORDER BY (c.likes * 3 + c.comments + ca.reads * 2) DESC
    </select>

    <select id="selectFocusArticleByTypeAndReferenceId" resultMap="IntegratedResultMap">
        <include refid="select_statement"/>
        AND c.id IN (SELECT cr.content_id FROM content_reference cr WHERE cr.type=#{referenceType} AND cr.ref_id = #{referenceId}
        GROUP BY cr.ref_id,cr.content_id ORDER BY count(id) DESC)
    </select>
</mapper>